def validate_user_input(data) -> dict:
    # проверка типа данных
    if not isinstance(data, dict):
        raise TypeError("Аргумент должен быть словарем")
    # проверка, что наличия и типа ключа name
    if 'name' not in data or not isinstance(data['name'], str):
        raise ValueError("ключ 'name' должен присутовать в словаре и быть строкой")
    # проверка, что наличия и типа ключа age
    if 'age' not in data or not isinstance(data['age'], (int, float)) or not data['age'] > 0:
        raise ValueError("ключ 'age' должен присутовать в словаре и быть положительным числом")
    

try:
    validate_user_input({'name': 'Alice', 'age': 30})
    print("тест 1 пройден")
except Exception as e:
    print(f'тест 1 не пройден {e}')    
    
try:
    validate_user_input({'age': 30})
    print("тест 2 пройден")
except Exception as e:
    print(f'тест 2 не пройден {e}') 

try:
    validate_user_input({'name': 'Alice'})
    print("тест 3 пройден")
except Exception as e:
    print(f'тест 3 не пройден {e}') 
    
try:
    validate_user_input({'name': 'Alice', 'age': -30})
    print("тест 4 пройден")
except Exception as e:
    print(f'тест 4 не пройден {e}')        

try:
    validate_user_input('name')
    print("тест 5 пройден")
except Exception as e:
    print(f'тест 5 не пройден {e}')        
    
    
# Упражнение 2: Написать функцию с валидацией входных данных и генерацией исключений

# Задание: Создать функцию validate_user_input(data), которая принимает словарь с данными пользователя. Функция должна проверять наличие и корректность ключей name (строка) и age (положительное число). В случае некорректных данных генерировать соответствующие исключения.

# Пошаговая инструкция:
# •	Создайте функцию validate_user_input(data).
# •	Проверьте, что data является словарем. Если нет, вызовите TypeError.
# •	Проверьте, что ключ name присутствует в словаре и его значение является строкой. Если нет, вызовите ValueError.
# •	Проверьте, что ключ age присутствует в словаре и его значение является положительным числом. Если нет, вызовите ValueError.
# •	Используйте ключевое слово from, чтобы создать цепочку исключений, если это необходимо.

# Проверка:
# •	Протестируйте функцию с корректными данными, например, {"name": "Alice", "age": 30}.
# •	Протестируйте функцию с отсутствующим ключом name.
# •	Протестируйте функцию с некорректным значением для age (например, строкой или отрицательным числом).
# •	Протестируйте функцию с некорректным типом входных данных (например, строкой вместо словаря).    